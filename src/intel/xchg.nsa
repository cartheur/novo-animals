# Exchange registers HL with DE (with fetch)
INCLUDE ../inc/unary.nsa
INCLUDE ../inc/zpage.nsa
INCLUDE ../inc/pages.nsa
PAGE XCHG_PG

# assume: Y = $VMS, ref: https://en.wikipedia.org/wiki/XOR_swap_algorithm
LDZ HL, $INC2$NULL
FNH DZ, HLD           # inc state
# D <-> H
LD HL, $IDEN$NULL
LDZ Y, $DREG
FNH DZ, HL            # HL = D
#10
LD Y, $HREG
XORHL DZ, NA          # A = D$H
LD Y, $DREG
XORHL AZ, ND          # D$A -> D
#22
LD Y, $HREG
MVHL AZ, ND           # D -> H
# E <-> L
LD HL, $IDEN$NULL
#30
LDZ Y, $EREG
FNH DZ, HL            # HL = E
LD Y, $LREG
XORHL DZ, NA          # A = E$L
#40
LD Y, $EREG
XORHL AZ, ND          # E$A -> E
LD Y, $LREG
MVHL AZ, ND           # E -> L
#52
NOP
NOP
NOP
LD HL, $INC$FORK1
LD Y, $PCL
FNFH DZ, XD           # X,PCL = PCL+1
FNDL A, PC
#65

ADDR 0x80
LDZ Y, $PCH
FNH DZ, HLD           # PCH = PCH+1      *** inc PCH ***
LD HL, $IDEN$NULL
#71
FNH A, Y              # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH AZ, HLD           # A -> inst cache,HL
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86

ADDR 0xC0
NOP
NOP
LD HL, $IDEN$NULL
LDZ Y, $PCH
#71
FNH DZ, Y             # Y = PCH
FNFH M, NA            # A = [PC]
LD Y, $INST
FNH AZ, HLD           # A -> inst cache,HL
#80
LD Y, $VMS            # set Y = $VMS on exit
DISHL DZ, PGA         # jump to next VMC
#86
